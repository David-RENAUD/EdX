##we add the 1s to avoid p-values=0 but we also accept:
( sum( abs(null) >= abs(obs)) ) / ( length(null) )
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar)-mean(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar)-mean(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar)-mean(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar)-mean(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
dat <- c(smokers,nonsmokers)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar)-median(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
dat <- c(smokers,nonsmokers)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar)-median(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
dat <- c(smokers,nonsmokers)
#set.seed(1)
null <- replicate(1000, {
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar)-median(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
#set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
dat <- c(smokers,nonsmokers)
set.seed(1)
null <- replicate(1000, {
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar)-median(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
set.seed(1)
null <- replicate(1000, {
dat <- c(smokers,nonsmokers)
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar)-median(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- median(smokers) - median(nonsmokers)
set.seed(1)
null <- replicate(1000, {
dat <- c(smokers,nonsmokers)
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar)-median(nonsmokersstar))
})
hist(null)
abline(v=obs, col="red", lwd=2)
#the proportion of permutations with larger difference
(sum(abs(null) > abs(obs)) + 1) / (length(null) + 1)
(sum(abs(null) > abs(obs))) / (length(null))
chisq.test(c(10,20),c(6,24))
chisq.test(c(10,20),c(6,24),249)
?chisq.test
tab <- matrix(c(3,1,1,3),2,2)
rownames(tab)<-c("Poured Before","Poured After")
colnames(tab)<-c("Guessed before","Guessed after")
tab
disease=factor(c(rep(0,180),rep(1,20),rep(0,40),rep(1,10)),
labels=c("control","cases"))
genotype=factor(c(rep("AA/Aa",200),rep("aa",50)),
levels=c("AA/Aa","aa"))
dat <- data.frame(disease, genotype)
dat <- dat[sample(nrow(dat)),] #shuffle them up
head(dat)
tab <- table(genotype,disease)
tab
(tab[2,2]/tab[2,1]) / (tab[1,2]/tab[1,1])
(tab[2,2]/tab[2,1]) / (tab[1,2]/tab[1,1])
p=mean(disease=="cases")
p
# expected table
expected <- rbind(c(1-p,p)*sum(genotype=="AA/Aa"),
c(1-p,p)*sum(genotype=="aa"))
dimnames(expected)<-dimnames(tab)
expected
chisq.test(tab)$p.value
d = read.csv("assoctest.csv")
str(d)
tab <- table(allele,case)
tab
d = read.csv("assoctest.csv")
str(d)
tab <- table(d$allele,d$case)
tab
d = read.csv("assoctest.csv")
str(d)
tab <- table(d$allele,d$case)
tab
chisq.test(tab)$p.value
chisq.test(tab)
fisher.test(tab)
rm(list=ls())
setwd("H:/Rspace/PH525/1x-Statistics-and-R/code")
load("skew.RData")
dim(dat)
for (i in 1:9) {
qqplot(dat[,i])
}
for (i in 1:9) {
qqnorm(dat[,i])
}
# qq plot on each columns, to compare with normal distribution
par(mfrow = c(3,3))
for (i in 1:9) {
qqnorm(dat[,i])
}
for (i in 1:9) {
(mean(dat[,i])-(dat[,i]))/mean(dat[,i])
for (i in 1:9) {
(mean(dat[,i])-median(dat[,i]))/mean(dat[,i])
}
for (i in 1:9) {
skew<-(mean(dat[,i])-median(dat[,i]))/mean(dat[,i])
}
plot(skew)
for (i in 1:9) {
skew[i]<-(mean(dat[,i])-median(dat[,i]))/mean(dat[,i])
for (i in 1:9) {
skew[i]<-(mean(dat[,i])-median(dat[,i]))/mean(dat[,i])
}
plot(skew)
for (i in 1:9) {
hist(dat[,i])
}
# qq plot on each columns, to compare with normal distribution
par(mfrow = c(3,3))
for (i in 1:9) {
qqnorm(dat[,i])
}
for (i in 1:9) {
hist(dat[,i])
}
for (i in 1:9) {
skew[i]<-(mean(dat[,i])-median(dat[,i]))/mean(dat[,i])
}
plot(skew)
head(InsectSprays)
boxplot(split(InsectSprays$count, InsectSprays$spray))
par(mfrow=c(1,1))
head(InsectSprays)
boxplot(split(InsectSprays$count, InsectSprays$spray))
boxplot(InsectSprays$count~InsectSprays$spray)
head(InsectSprays)
boxplot(split(InsectSprays$count, InsectSprays$spray))
boxplot(InsectSprays$count~InsectSprays$spray)
library(dplyr)
data(nym.2002, package="UsingR")
str(nym.2002)
boxplot(nym.2002$time~nym.2002$gender)
hist(nym.2002$time~nym.2002$gender)
summary(nym.2002)
summarise(nym.2002, gender,avg = mean(time))
summarise(nym.2002,avg = mean(time))
ntm.2002 %>% group_by(gender) %>% select(time) %>% mean
nym.2002 %>% group_by(gender) %>% select(time) %>% mean
nym.2002 %>% group_by(gender) %>% select(time) %>% summarise(mean(time))
nym.2002 %>% group_by(gender) $%>% select(time)$ %>% summarise(mean(time))
nym.2002 %>% group_by(gender) %>% summarise(mean(time))
ypar(1,3)
males <- filter(nym.2002, gender=="Male") %>% select(time) %>% unlist
females <- filter(nym.2002, gender=="Female") %>% select(time) %>% unlist
boxplot(females, males)
hist(females,xlim=c(range( nym.2002$time)))
hist(males,xlim=c(range( nym.2002$time)))
mypar(1,3)
males <- filter(nym.2002, gender=="Male") %>% select(time) %>% unlist
females <- filter(nym.2002, gender=="Female") %>% select(time) %>% unlist
boxplot(females, males)
hist(females,xlim=c(range( nym.2002$time)))
hist(males,xlim=c(range( nym.2002$time)))
library(rafalib)
mypar(1,3)
males <- filter(nym.2002, gender=="Male") %>% select(time) %>% unlist
females <- filter(nym.2002, gender=="Female") %>% select(time) %>% unlist
boxplot(females, males)
hist(females,xlim=c(range( nym.2002$time)))
hist(males,xlim=c(range( nym.2002$time)))
data(nym.2002, package="UsingR")
males <- filter(nym.2002, gender=="Male")
females <- filter(nym.2002, gender=="Female")
cor(males$age,males$time)
cor(females$age,males$time)
cor(females$age,females$time)
maleAgeGroups <- split(males$time,round(males$age,5))
boxplot(maleAgeGroups)
install.packages("binr")
library(binr)
?b"binr-package"
?"binr"
mypar(1,2)
plot(males$age,males$time)
plot(females$age,females$time)
bins=seq(20,70,10)
bins
bins=seq(20,70,5)
bins
for (i in bins){
print i
}
for (i in 1:length(bins){
print i
}
mypar(1,2)
plot(males$age,males$time)
plot(females$age,females$time)
bins=seq(20,70,5)
bins
for (i in 1:length(bins){
print i
}
for (i in 1:length(bins)){
print i
}
for (i in 1:length(bins)){
print (i)
}
for (i in 1:length(bins)-1){
bin=c(bins[i],bins[i+1])
malebin[i]<-males %>% group_by(age >bin[i] & age <=bin[i+1]) %>% summarise(mean(time))
}
for (i in 1:length(bins)-1){
bin=c(bins[i],bins[i+1])
males %>% group_by(age >bin[i] & age <=bin[i+1]) %>% summarise(mean(time))
}
for (i in 1:length(bins)-1){
bin=c(bins[i],bins[i+1])
males %>% group_by(age >bin[i] & age <=bin[i+1]) %>% summarise(avg=mean(time))
}
males$cat<-(males$age-20)/5
females$cat<-(females$age-20)/5
malegroups<-split(males,round(males$cat))
malegroups<-split(males,round(males$cat))
boxplot(malegroups)
malegroups
boxplot(split(males$time,round(males$cat))
)
boxplot(split(males$time,round(males$cat)),xlab=males$age)
hist(split(males$time,round(males$cat)))
mypar(1,2)
plot(males$age,males$time)
plot(females$age,females$time)
males$cat<-(males$age-20)/5
females$cat<-(females$age-20)/5
boxplot(split(males$time,round(males$cat)))
boxplot(split(females$time,round(females$cat)))
library(rafalib)
mypar(2,2)
plot(females$age, females$time)
plot(males$age, males$time)
group <- floor(females$age/5) * 5
boxplot(females$time~group)
group <- floor(males$age/5) * 5
boxplot(males$time~group)
group
time = sort(nym.2002$time)
head(time)
tail(time)
median(time)
min(time)/median(time)
time[1]/time[len(time)/2]
min(time)/median(time)
time[1]/time[length(time)/2]
max(time)/median(time)
plot(time/median(time), ylim=c(1/4,4))
abline(h=c(1/2,1,2))
plot(log2(time/median(time)),ylim=c(-2,2))
abline(h=-1:1)
data(ChickWeight)
rm(list=ls())
data(ChickWeight)
data(ChickWeight)
head(ChickWeight)
plot( ChickWeight$Time, ChickWeight$weight, col=ChickWeight$Diet)
str(ChickWeight)
head(chick)
chick = reshape(ChickWeight, idvar=c("Chick","Diet"), timevar="Time",
direction="wide")
head(chick)
chick = na.omit(chick)
summary(chick$weight.4)
summary(c(chick$weight.4,3000))
mean(c(chick$weight.4,3000))/mean(chickWeight$weight.4)
median(c(chick$weight.4,3000))/median(chickWeight$weight.4)
mean(c(chick$weight.4,3000))/mean(chick$weight.4)
median(c(chick$weight.4,3000))/median(chick$weight.4)
sd(c(chick$weight.4,3000))/sd(chick$weight.4)
mad(c(chick$weight.4,3000))/mad(chick$weight.4)
mypar(1,2)
plot(chick$weight.4)
plot(chick$weight.21)
mypar(1,1)
plot(chick$weight.4,chick$wei
mypar(1,1)
plot(chick$weight.4,chick$weight.21)
cor(chick$weight.4,chick$weight.21)
cor(c(chick$weight.4,3000),c(chick$weight.21,3000)
cor(c(chick$weight.4,3000),c(chick$weight.21,3000))
?cor
# calculate Spearman correlation
cor(chick$weight.4,chick$weight.21,method="spearman")
# now with outlier
cor(c(chick$weight.4,3000),c(chick$weight.21,3000),method="spearman")
# calculate Spearman correlation
pearsonWithoutOutlier<-cor(chick$weight.4,chick$weight.21,method="spearman")
# now with outlier
pearsonWithOutlier<-cor(c(chick$weight.4,3000),c(chick$weight.21,3000),method="spearman")
pearsonWithOutlier/pearsonWithoutOutlier
# calculate Spearman correlation
pearson_No_Outlier<-cor(chick$weight.4,chick$weight.21,method="spearman")
# now with outlier
pearson_With_Outlier<-cor(c(chick$weight.4,3000),c(chick$weight.21,3000),method="spearman")
pearson_With_Outlier/pearson_No_Outlier
# calculate Pearson correlation
pearson_No_outlier<-cor(chick$weight.4,chick$weight.21)
# now with outlier
pearson_With_outlier<-cor(c(chick$weight.4,3000),c(chick$weight.21,3000))
pearson_With_Outlier/pearson_No_Outlier
# calculate Spearman correlation
spearman_No_Outlier<-cor(chick$weight.4,chick$weight.21,method="spearman")
# now with outlier
spearman_With_Outlier<-cor(c(chick$weight.4,3000),c(chick$weight.21,3000),method="spearman")
spearman_With_Outlier/spearman_No_Outlier
# calculate Pearson correlation
pearson_No_outlier<-cor(chick$weight.4,chick$weight.21)
# now with outlier
pearson_With_outlier<-cor(c(chick$weight.4,3000),c(chick$weight.21,3000))
pearson_With_Outlier/pearson_No_Outlier
# calculate Pearson correlation
pearson_No_outlier<-cor(chick$weight.4,chick$weight.21,method="pearson")
# now with outlier
pearson_With_outlier<-cor(c(chick$weight.4,3000),c(chick$weight.21,3000),method="pearson")
pearson_With_Outlier/pearson_No_Outlier
pearson_No_outlier<-cor(chick$weight.4,chick$weight.21,method="pearson")
# now with outlier
pearson_With_outlier<-cor(c(chick$weight.4,3000),c(chick$weight.21,3000),method="pearson")
pearson_With_Outlier/pearson_No_Outlier
# calculate Pearson correlation
pearson_No_Outlier<-cor(chick$weight.4,chick$weight.21,method="pearson")
# now with outlier
pearson_With_Outlier<-cor(c(chick$weight.4,3000),c(chick$weight.21,3000),method="pearson")
pearson_With_Outlier/pearson_No_Outlier
rm(list=ls())
data(ChickWeight)
head(ChickWeight)
plot( ChickWeight$Time, ChickWeight$weight, col=ChickWeight$Diet)
chick = reshape(ChickWeight, idvar=c("Chick","Diet"), timevar="Time",direction="wide")
head(chick)
chick = na.omit(chick)
x<-chick$weight.4
unlist(x)
class(x)
x<-filter(chick$weight.4,Diet==1) %>% unlist
y<-filter(chick$weight.4,Diet==4) %>% unlist
library(dplyr)
x<-filter(chick$weight.4,Diet==1) %>% unlist
y<-filter(chick$weight.4,Diet==4) %>% unlist
library(dplyr)
x<-filter(chick$weight.4,Diet==1) %>% unlist
y<-filter(chick$weight.4,Diet==4) %>% unlist
library(dplyr)
x<-chick $>$ select(weight.4) %>% filter(Diet==1) %>% unlist
library(dplyr)
x<-chick %>% select(weight.4) %>% filter(Diet==1) %>% unlist
x<-chick %>% select(chick,weight.4) %>% filter(Diet==1) %>% unlist
library(dplyr)
x<-chick %>% filter(Diet==1) %>% select(weight.4) %>%unlist
y<-chick %>% filter(Diet==4) %>% select(weight.4) %>%unlist
t.test(x,y)
wilcox.test(x,y)
x<-chick %>% filter(Diet==1) %>% select(weight.4) %>%unlist
y<-chick %>% filter(Diet==4) %>% select(weight.4) %>%unlist
t.test(x,y)$p.value
wilcox.test(x,y)$p.value
t.test(c(x,200),y)$p.value
wilcox.test(c(x,200),y)$p.value
library(rafalib)
mypar(1,3)
boxplot(x,y)
boxplot(x,y+10)
boxplot(x,y+100)
t.test(x,y+10)$statistic-t.test(x,y+100)$statistic
wilcox.test(x,y+10)$statistic-wilcox.test(x,y+100)$statistic
wilcox.test(c(1,2,3),c(4,5,6))$p.value
wilcox.test(c(1,2,3),c(400,500,600))$p.value
