FPR[i]=tab[2,1]/sum(tab[,1])
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=sum(diag(tab))/sum(tab)
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(sum(tab)-sum(diag(tab)))/sum(tab)
}
nthresh=100
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
print(threshold[i])
print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR)
plot(threshold,FNR)
plot(threshold,FPR)
plot(threshold,TPR)
plot(threshold,TER)
plot(FPR,TPR,type=l)
plot(FPR,TPR,type="l")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="blue")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=.99*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
maxthresh=0.5
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=maxthresh*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue",xlab="threshold",ylab="Error rate")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
maxthresh=0.5
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=maxthresh*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue",xlab="threshold",ylab="Error rate")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue",xlab="threshold",ylab="Error rate")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue",main="ROC curve")
str(lda.pred)
str(lda.pred$posterior)
summary(lda.pred$posterior)
library(pROC)
> auc(default$default, lda.pred)
library(pROC)
auc(Default$default, lda.pred)
install.packages("pROC")
library(pROC)
auc(Default$default, lda.pred)
library(pROC)
auc(Default$default, lda.pred$class)
str(lad.pred)
str(lda.pred)
str(Default)
roc(lda.class,lda.pred$posterior[,2])
roc(lda.class,lda.pred$posterior[,1])
roc(Default$default,lda.pred$posterior[,1])
roc(Default$default,lda.pred$posterior[,2])
roc(Default$default,lda.pred$posterior[,1])
auc(Default$default, lda.pred$posterior[,1])
roc_curve<-roc(Default$default,lda.pred$posterior[,1])
plot(roc_curve)
auc(Default$default, lda.pred$posterior[,1])
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction="<")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
library(pROC)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
#plot(roc_curve)
auc(Default$default, lda.pred$posterior[,1])
?dbinom()
hist(dbinom(62,100,.6))
hist(dbinom(62,100,.6))
dbinom(62,100,.6)
?binom()
?dbinom()
rbinom(100,100,62)
rbinom(100,1,62)
x<-seq(1,100)
dbinom(x,62,.6)
plot(dbinom(x,62,.6))
plot(dbinom(x,100,.6))
dave<-0.7
carloe<-0.6
x<-seq(1,100)
plot(dbinom(x,100,dave))
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
d<-data.frame(z,dbinom(x,size,dave),dbinom(x,size,carole))
d<-data.frame(x,dbinom(x,size,dave),dbinom(x,size,carole))
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_hist()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_histogram()
g
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=d))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity")
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.5))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col="red"))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[22]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1],fill=COL[1]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
library(ggplot2)
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7],fill=COL[7]))
g
?COL()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.5))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.3))
g
?Rmarkdown
?markdown
knit_engines$set()
?cat
qnorm(-3.7,0,1.7)
pnorm(-3.7,0,1.7)
?swirl
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
?InstallCourses
install_from_swirl(Getting and Cleaning Data, dev = FALSE, mirror = "github")
install_from_swirl(Getting_and_Cleaning_Data, dev = FALSE, mirror = "github")
SWIRL()
swirl()
7/(200000/10000)
7/(10000/200000)
pi()
pi
pi * (6371e6)^2*0.0323/8130
pi * (6371e6)^2*0.0323/(0.7*8130)
pi * (6371e3)^2*0.0323/(0.7*8130)
4*pi * (6371e3)^2*0.0323/(0.7*8130)
(4)*pi * (6371e3)^2*0.0323/(0.7*8130))/1e9
(4*pi * (6371e3)^2*0.0323/(0.7*8130))/1e9
install.packages("circular")
library(circular)
source('~/.active-rstudio-document')
par(1,1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?circular
?windrose
dir <- circular(runif(100, 0, 360), units="degrees")
mag <-  rgamma(100, 15)
sample <- data.frame(dir=dir, mag=mag)
par(mfrow=c(2,2))
res <- windrose(sample)
## we join two pedals and keep the same shrink (scale of the plot)
breaks <-circular(seq(0, 2 * pi, by = pi/6))
breaks <- breaks[-2]
windrose(sample, breaks=breaks, main="The same but with two pedals joined",
shrink=res$shrink)
dir <- circular(runif(100, 0, 360), units="degrees")
mag <-  rgamma(100, 15)
sample <- data.frame(dir=dir, mag=mag)
par(mfrow=c(1,1))
res <- windrose(sample)
library(openintro)
data(COL)
COL
res <- windrose(sample)
res <- windrose(sample,fill.col=c("#569BBD","#F05133"))
res <- windrose(sample,fill.col=c("#569BBDC0","#F05133C0"))
?Constants
5.67e-8 * 223^4
5.67e-8 * 255^4
0.4*1370/4
dweights1=c(30.23,8.94,29.56,19.69,12.16,15.47,8.4,8.78,15.76,14.15)
dweights2=c(14.4,21.09,16.51,16.41,20.15,16.09,13.48,10.62,11.28,14.27)
allweights=c(dweights1,dweights2)
summaary(allweights)
summary(allweights)
summary(dweights1)
summary(dweights2)
summary(allweights)
hist(allweights)
hist(allweights)
qqnorm(allweights)
qqline(allweights)
103/.6
.6*172
96*74
96*6
576*5
demo(plotmath)
demoPlotmath
demo(plotmath)
paste(expression(x %+-% y),"=",3)
expression(x %+-% y)
text(expression(x %+-% y))
library(BiocInstaller)
biocLite("ERBS")
??("ERBS")
??ERBS
library(devtools)
install_github("genomicsclass/ph525x")
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(BiocInstaller)
biocLite("IRanges")
library(BiocInstaller)
biocLite("Biobase")
library(BiocInstaller)
biocLite("Homo.sapiens")
library(BiocInstaller)
biocLite("GO.db")
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(BiocInstaller)
biocLite("GenomicFeatures")
library(BiocInstaller)
biocLite("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(Biobase)
sessionInfo()
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(devtools)
install_github("genomicsclass/ph525x")
library(Biobase)
library(IRanges)
library(ph525x)
library(devtools)
install_github("genomicsclass/ph525x")
library(BiocInstaller)
biocLite("TxDb.Hsapiens.UCSC.hg19.knownGene")
source("https://bioconductor.org/biocLite.R")
biocLite("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(BiocInstaller)
biocValid()
install.packages("sp")
install.packages("testthat")
install.packages("HistData")
library(GenomicRanges)
library(GenomicRanges)
load("h2bw.rda") # 200 Mb!
setwd("H:/Rspace/PH525/6x/Week 1")
library(GenomicRanges)
load("h2bw.rda") # 200 Mb!
library(ERBS)
library(devtools)
install_github("genomicsclass/ph525x")
library(BiocInstaller)
biocLite("Homo.sapiens")
library(BiocInstaller)
biocLite("GO.db")
