TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
maxthresh=0.5
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=maxthresh*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue",xlab="threshold",ylab="Error rate")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
nthresh=500
maxthresh=0.5
TPR<- vector(mode="numeric", length=nthresh)
FPR<- vector(mode="numeric", length=nthresh)
FNR<- vector(mode="numeric", length=nthresh)
TER<- vector(mode="numeric", length=nthresh)
threshold<-vector(mode="numeric", length=nthresh)
for ( i in 1:nthresh){
threshold[i]=maxthresh*i/nthresh
tab=table(lda.pred$posterior[,2]>=threshold[i],Default$default)
#print(threshold[i])
#print(tab)
if(nrow(tab)==1){
tab<-rbind(tab,c(0,0))
}
if(ncol(tab)==1){
tab<-cbind(tab,c(0,0))
}
TPR[i]=tab[2,2]/sum(tab[,2])
FNR[i]=1-TPR[i]
FPR[i]=tab[2,1]/sum(tab[,1])
TER[i]=(tab[1,2]+tab[2,1])/sum(tab)
}
plot(FPR,TPR,type="l",col="blue",xlab="threshold",ylab="Error rate")
plot(threshold,FNR,type="l",col="blue")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue")
plot(threshold,FNR,type="l",col="blue",xlab="threshold",ylab="Error rate")
lines(threshold,FPR,type="l",col="red")
lines(threshold,TER,type="l",col="black")
plot(FPR,TPR,type="l",col="blue",main="ROC curve")
str(lda.pred)
str(lda.pred$posterior)
summary(lda.pred$posterior)
library(pROC)
> auc(default$default, lda.pred)
library(pROC)
auc(Default$default, lda.pred)
install.packages("pROC")
library(pROC)
auc(Default$default, lda.pred)
library(pROC)
auc(Default$default, lda.pred$class)
str(lad.pred)
str(lda.pred)
str(Default)
roc(lda.class,lda.pred$posterior[,2])
roc(lda.class,lda.pred$posterior[,1])
roc(Default$default,lda.pred$posterior[,1])
roc(Default$default,lda.pred$posterior[,2])
roc(Default$default,lda.pred$posterior[,1])
auc(Default$default, lda.pred$posterior[,1])
roc_curve<-roc(Default$default,lda.pred$posterior[,1])
plot(roc_curve)
auc(Default$default, lda.pred$posterior[,1])
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction="<")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">")
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
library(pROC)
roc_curve<-roc(Default$default,lda.pred$posterior[,1],plot=TRUE,direction=">",auc=TRUE)
#plot(roc_curve)
auc(Default$default, lda.pred$posterior[,1])
?dbinom()
hist(dbinom(62,100,.6))
hist(dbinom(62,100,.6))
dbinom(62,100,.6)
?binom()
?dbinom()
rbinom(100,100,62)
rbinom(100,1,62)
x<-seq(1,100)
dbinom(x,62,.6)
plot(dbinom(x,62,.6))
plot(dbinom(x,100,.6))
dave<-0.7
carloe<-0.6
x<-seq(1,100)
plot(dbinom(x,100,dave))
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
d<-data.frame(z,dbinom(x,size,dave),dbinom(x,size,carole))
d<-data.frame(x,dbinom(x,size,dave),dbinom(x,size,carole))
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_hist()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_histogram()
g
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=d))+geom_histogram()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar()
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity")
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.5))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.2))
g
library(ggplot2)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col="red"))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7]))
g
library(ggplot2)
library(openintro)
data(COL)
dave<-0.7
carole<-0.6
size<-100
x<-seq(1,size)
dat<-data.frame(x,d=dbinom(x,size,dave),c=dbinom(x,size,carole))
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[22]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[1],fill=COL[1]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="bin",aes(width=0.4,col = COL[2],fill=COL[2]))
g
library(ggplot2)
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[2],fill=COL[2]))
g
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,col = COL[7],fill=COL[7]))
g
?COL()
g<-ggplot(data=dat,aes(x=x,y=d))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],fill=COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7]))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.5))
g
g<-ggplot(data=dat,aes(x=x,y=d,fill=COL[7]))+geom_bar(stat="identity",aes(width=0.4,colour = COL[7],alpha=0.3))
g
?Rmarkdown
?markdown
knit_engines$set()
?cat
qnorm(-3.7,0,1.7)
pnorm(-3.7,0,1.7)
?swirl
install.packages("swirl")
library(swirl)
ls()
rm(list=ls())
ls()
swirl()
?InstallCourses
install_from_swirl(Getting and Cleaning Data, dev = FALSE, mirror = "github")
install_from_swirl(Getting_and_Cleaning_Data, dev = FALSE, mirror = "github")
SWIRL()
swirl()
7/(200000/10000)
7/(10000/200000)
pi()
pi
pi * (6371e6)^2*0.0323/8130
pi * (6371e6)^2*0.0323/(0.7*8130)
pi * (6371e3)^2*0.0323/(0.7*8130)
4*pi * (6371e3)^2*0.0323/(0.7*8130)
(4)*pi * (6371e3)^2*0.0323/(0.7*8130))/1e9
(4*pi * (6371e3)^2*0.0323/(0.7*8130))/1e9
install.packages("circular")
library(circular)
source('~/.active-rstudio-document')
par(1,1)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?circular
?windrose
dir <- circular(runif(100, 0, 360), units="degrees")
mag <-  rgamma(100, 15)
sample <- data.frame(dir=dir, mag=mag)
par(mfrow=c(2,2))
res <- windrose(sample)
## we join two pedals and keep the same shrink (scale of the plot)
breaks <-circular(seq(0, 2 * pi, by = pi/6))
breaks <- breaks[-2]
windrose(sample, breaks=breaks, main="The same but with two pedals joined",
shrink=res$shrink)
dir <- circular(runif(100, 0, 360), units="degrees")
mag <-  rgamma(100, 15)
sample <- data.frame(dir=dir, mag=mag)
par(mfrow=c(1,1))
res <- windrose(sample)
library(openintro)
data(COL)
COL
res <- windrose(sample)
res <- windrose(sample,fill.col=c("#569BBD","#F05133"))
res <- windrose(sample,fill.col=c("#569BBDC0","#F05133C0"))
?Constants
5.67e-8 * 223^4
5.67e-8 * 255^4
0.4*1370/4
dweights1=c(30.23,8.94,29.56,19.69,12.16,15.47,8.4,8.78,15.76,14.15)
dweights2=c(14.4,21.09,16.51,16.41,20.15,16.09,13.48,10.62,11.28,14.27)
allweights=c(dweights1,dweights2)
summaary(allweights)
summary(allweights)
summary(dweights1)
summary(dweights2)
summary(allweights)
hist(allweights)
hist(allweights)
qqnorm(allweights)
qqline(allweights)
103/.6
.6*172
96*74
96*6
576*5
demo(plotmath)
demoPlotmath
demo(plotmath)
paste(expression(x %+-% y),"=",3)
expression(x %+-% y)
text(expression(x %+-% y))
sessionInfo()
library(Biobase)
source("http://www.bioconductor.org/biocLite.R")
biocLite()
install_github("genomicsclass/ph525x")
library(devtools)
install_github("genomicsclass/ph525x")
source("http://www.bioconductor.org/biocLite.R")
library(BiocInstaller)
biocLite("Biobase")
biocLite("genefu")
library(devtools)
install_github("genomicsclass/ph525x")
install_github("genomicsclass/ph525x")
library(Biobase)
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(devtools)
library(IRanges)
install_github("genomicsclass/ph525x")
sessionInfo()
library(BiocInstaller)
biocLite("Homo.sapiens")
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(BiocInstaller)
biocLite("geuvPack")
source("http://www.bioconductor.org/biocLite.R")
biocLite()
biocLite("Rsamtools")
f1<-system.file("extdata","ALLchr22phase3_shapeit2_mvncall_integrated_v5a20130502genotypes.gtf.gz",package="Rsamtools",mustWork=TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite("VariantAnnotation") #install the package
library("VariantAnnotation") #load the package
example("readVcf") #optional, test the function by running example codes
fl <- system.file("extdata", "ex2.vcf", package="VariantAnnotation")
vcf <- readVcf(fl, "hg19")
vcf
fl <- system.file("extdata", "ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz", package="VariantAnnotation")
vcf <- readVcf(fl, "hg19")
vcf<-readVcf("ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz", package="VariantAnnotation","hg19")
setwd("H:/Rspace/PH525/5x")
setwd("H:/Rspace/PH525/6x/Week2_ScalableAnalysis")
vcf<-readVcf("ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz", package="VariantAnnotation","hg19")
vcf<-readVcf("ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz", package="VariantAnnotation")
vcf<-readVcf("ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz", package="VariantAnnotation")
?readVcf
vcf<-readVcf("ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz", genome="hg19")
f1<-"ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz"
tbx<-TabixFile(f1)
f1
?VCFHeader
hdr<-scanVcfHeader(f1)
hdr
library(geuvPack)
library(VariantAnnotation)
gtpath
biocLite("geuvPack")
library(Rsamtools)
library(BiocInstaller)
biocLite("geuvPack")
library(geuvPack)
.libPaths
.libPaths()
.libPaths("C:/Rpackages")
library(geuvPack)
library(geuvPack)
library(VariantAnnotation)
gtpath
gtpath(22)
f1<-"ALL.chr22.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz"
h22 = scanVcfHeader(f1)
h22
h22 = scanVcfHeader(gtpath(22))
h22 = scanVcfHeader(f1)
h22 = scanVcfHeader(gtpath(22))
?regex
urlstem<-"http://1000genomes.s3.amazonaws.com/release/20130502/"
a<-grep(urlstem,gtpath(22))
a
a<-gsub(urlstem,gtpath(22))
?regexpr
a<-regexpr(urlstem,gtpath(22))
a
substr(tpath(22), start=length(urlstem), stop=length(gtpath(22)))
substr(gtpath(22), start=length(urlstem), stop=length(gtpath(22)))
length(gtpath(22))
gtpath(22)
nchar(gtpath(22))
substr(gtpath(22), start=nchar(urlstem), stop=nchar(gtpath(22)))
substr(gtpath(22), start=nchar(urlstem)+1, stop=nchar(gtpath(22)))
urlstem<-"http://1000genomes.s3.amazonaws.com/release/20130502/"
f1<-substr(gtpath(22), start=nchar(urlstem)+1, stop=nchar(gtpath(22)))
h22 = scanVcfHeader(f1)
h22
h22 = scanVcfHeader(gtpath(22)) # does not work!
f1<-substr(gtpath(22), start=nchar(urlstem)+1, stop=nchar(gtpath(22)))
options(digits=3)
library(ph525x)
data(readES)
library(limma)
mm = model.matrix(~t_stage, data=pData(readES))
f1 = lmFit(readES, mm)
ef1 = eBayes(f1)
topTable(ef1,2:4, n=20)
biocLite("genomicsclass/ph525x")
library(BiocInstaller)
biocLite("genomicsclass/ph525x")
library(devtools)
.libPaths("C:/Rpackages")
library(devtools)
install.packages("devtools")
library(BiocInstaller)
biocLite("genomicsclass/ph525x")
options(digits=3)
library(ph525x)
data(readES)
library(limma)
mm = model.matrix(~t_stage, data=pData(readES))
f1 = lmFit(readES, mm)
ef1 = eBayes(f1)
topTable(ef1,2:4, n=20)
biocLite("limma")
options(digits=3)
library(ph525x)
data(readES)
library(limma)
mm = model.matrix(~t_stage, data=pData(readES))
f1 = lmFit(readES, mm)
ef1 = eBayes(f1)
topTable(ef1,2:4, n=20)
?topTable
readES$numts = as.numeric(factor(readES$t_stage))
mm2 = model.matrix(~numts, data=pData(readES))
f2 = lmFit(readES,mm2)
ef2 = eBayes(f2)
topTable(ef2,2, n=50)
boxplot(exprs(readES)["COMP",]~readES$t_stage)
library(ph525x)
data(readMuts)
par(mfrow=c(4,1), mar=c(3,4,2,2))
rfs2 = rfs = list()
for(i in 1:4) rfs[[i]] = rainfall(readMuts, oind=i)
?rainfall
library(ph525x)
data(readMuts)
par(mfrow=c(4,1), mar=c(3,4,2,2))
rfs2 = rfs = list()
for(i in 1:4) rfs[[i]] = rainfall(readMuts, oind=i,inbw=1e6)
library(ph525x)
data(readMuts)
par(mfrow=c(4,1), mar=c(3,4,2,2))
rfs2 = rfs = list()
for(i in 1:4) rfs[[i]] = rainfall(readMuts, oind=i,inbw=1e6)
library(ph525x)
data(readMuts)
par(mfrow=c(4,1), mar=c(3,4,2,2))
rfs2 = rfs = list()
for(i in 1:4) rfs[[i]] = rainfall(readMuts, oind=i,ind)
for(i in 1:4) rfs[[i]] = rainfall(readMuts, oind=i,inbw=1e6)
library(ph525x)
data(readMuts)
par(mfrow=c(4,1), mar=c(3,4,2,2))
rfs2 = rfs = list()
for(i in 1:4) rfs[[i]] = rainfall(readMuts, oind=i,ind)
library(ph525x)
data(readMuts)
par(mfrow=c(4,1), mar=c(3,4,2,2))
rfs2 = rfs = list()
for(i in 1:4) rfs[[i]] = rainfall(readMuts, oind=i)
for(i in 1:4) rfs[[i]] = rainfall(readMuts, oind=i,inbw=1e6)
par(mfrow=c(4,1), mar=c(3,4,2,2))
for (i in 1:4) rfs2[[ i ]] = rainfall(readMuts, oind=i, inbw=1e7)
subj1 = rfs2[[1]]
s1den = subj1$density
s1tgd = subj1$mutGR$totalgd
intden1 = approx(s1den$x, s1den$y, s1tgd)$y
topd1ind = which.max(intden1)
subj1$mutGR[topd1ind,1:6]
Hugo_Symbol(subj1$mutGR)
subj1$mutGR[topd1ind,1]
subj1 = rfs2[[2]]
s1den = subj1$density
s1tgd = subj1$mutGR$totalgd
intden1 = approx(s1den$x, s1den$y, s1tgd)$y
topd1ind = which.max(intden1)
subj1$mutGR[topd1ind,1:6]
readMuts[1,1:6]
readMuts[1,1:12]
readMuts[1,1:6]
