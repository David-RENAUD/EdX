breaks <- breaks[-2]
windrose(sample, breaks=breaks, main="The same but with two pedals joined",
shrink=res$shrink)
dir <- circular(runif(100, 0, 360), units="degrees")
mag <-  rgamma(100, 15)
sample <- data.frame(dir=dir, mag=mag)
par(mfrow=c(1,1))
res <- windrose(sample)
library(openintro)
data(COL)
COL
res <- windrose(sample)
res <- windrose(sample,fill.col=c("#569BBD","#F05133"))
res <- windrose(sample,fill.col=c("#569BBDC0","#F05133C0"))
?Constants
5.67e-8 * 223^4
5.67e-8 * 255^4
0.4*1370/4
dweights1=c(30.23,8.94,29.56,19.69,12.16,15.47,8.4,8.78,15.76,14.15)
dweights2=c(14.4,21.09,16.51,16.41,20.15,16.09,13.48,10.62,11.28,14.27)
allweights=c(dweights1,dweights2)
summaary(allweights)
summary(allweights)
summary(dweights1)
summary(dweights2)
summary(allweights)
hist(allweights)
hist(allweights)
qqnorm(allweights)
qqline(allweights)
103/.6
.6*172
96*74
96*6
576*5
demo(plotmath)
demoPlotmath
demo(plotmath)
paste(expression(x %+-% y),"=",3)
expression(x %+-% y)
text(expression(x %+-% y))
sessionInfo()
library(Biobase)
source("http://www.bioconductor.org/biocLite.R")
biocLite()
install_github("genomicsclass/ph525x")
library(devtools)
install_github("genomicsclass/ph525x")
source("http://www.bioconductor.org/biocLite.R")
library(BiocInstaller)
biocLite("Biobase")
biocLite("genefu")
library(devtools)
install_github("genomicsclass/ph525x")
install_github("genomicsclass/ph525x")
library(Biobase)
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(devtools)
library(IRanges)
install_github("genomicsclass/ph525x")
sessionInfo()
library(BiocInstaller)
biocLite("Homo.sapiens")
source("http://www.bioconductor.org/biocLite.R")
biocLite()
library(BiocInstaller)
biocLite("geuvPack")
pnorm
?pnorm
?pchisq
pchisq(41.3013,1)
qchisq(41.3013,1)
pchisq(0.098,1)
pchisq(0.098,1,lower.tail=FALSE)
setwd("H:/Rspace/PH525/7x/DNA Methylation/3. Data Analysis and Integration")
library(minfi)
library(BiocInstaller)
biocLite("minfi")
biocLite("IlluminaHumanMethylation450kmanifest")
biocLite("IlluminaHumanMethylation450kanno.ilmn12.hg19")
library(minfi)
grset=getGenomicRatioSetFromGEO("GSE32148")
save(grset,file="H:/RSpace/PH525rawdata/grset.rda")
rm(list=ls())
#path="C:/temp/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
path="H:/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
list.files(path)
library(minfi)
library(IlluminaHumanMethylation450kmanifest)
library(IlluminaHumanMethylation450kanno.ilmn12.hg19)
#path="/YourPath"
targets=read.delim(file.path (path,"targets.txt"),as.is=TRUE)
targets
nrow(targets)
nrow(targets[targets$Status=="normal" & targets$Tissue=="colon",])
# or
sum(targets$Tissue=="colon" & targets$Status=="normal")
##or look here
table(targets$Tissue,targets$Status)
index = which( targets$Status=="normal" & targets$Tissue%in%c("colon","breast") )
targets = targets[index,]
library(minfi)
dat = read.450k.exp(base=path,targets = targets, verbose=TRUE)
class(dat)
## preprocess the data
dat = preprocessIllumina(dat)
class(dat)
## assign locations to each CpG
dat = mapToGenome(dat)
class(dat)
## precompute methylation values from U and M values
dat = ratioConvert(dat,type="Illumina")
class(dat)
library(rafalib)
mypar(1,1)
##extract methylation values
y = getBeta(dat)
shist(y)
mds = cmdscale( dist(t(y)))
tissue = as.factor(pData(dat)$Tissue)
plot(mds,col=tissue)
library(limma)
##create design matrix
tissue = as.factor(pData(dat)$Tissue)
X = model.matrix(~tissue)
##extract methylation values
y = getBeta(dat)
## obtain effect sizes and pvals with limma
fit = lmFit(y,X)
maxes<-which.max(fit$coefficients[,2])
maxes
library(AnnotationHub)
biocLite("AnnotationHub")
library(AnnotationHub)
ah = AnnotationHub()
cgi
cgi = ah[["AH5086"]]
cgi
"cg22365276" %in% seqnames(cgi)
fit
maxes
hist(fit$coefficients[,2])
cgi[360649]
cgi 5over% 360649
cgi %over% 360649
i = which( start(granges(dat))==22365276)
getBeta(dat,type="Illumina")[i,]
i
i = which( start(granges(dat))==360649)
i
granges(dat)
which(granges(dat)[rownames(granges(dat))==cg22365276],)
rownames(granges(dat))
seqnames(granges(dat))
rownames(dat)
index<-which(rownames(dat)=="cg22365276")
index
granges(dat)[maxes]
maxes<-which.max(fit$coefficients[,2])
seqnames(granges(dat)[maxes])
granges(dat)[maxes]
cgi
fit$coefficients[maxes,2]
summary(fit$coefficients[,2])
granges(dat)[maxes]
maxes<-which.max(fit$coefficients[,2])
maxes
index = which.max(abs( fit$coef[,2]))
index
seqnames(dat)[index]
start(dat)[index]
library(qvalue)
##create design matrix
tissue = as.factor(pData(dat)$Tissue)
X = model.matrix(~tissue)
##extract methylation values
y = getBeta(dat)
## obtain effect sizes and pvals with limma
fit = lmFit(y,X)
eb = ebayes(fit)
## obtain q-values
qvals = qvalue(eb$p.value[,2])$qvalue
biocLite("qvalue")
library(qvalue)
##create design matrix
tissue = as.factor(pData(dat)$Tissue)
X = model.matrix(~tissue)
##extract methylation values
y = getBeta(dat)
## obtain effect sizes and pvals with limma
fit = lmFit(y,X)
eb = ebayes(fit)
## obtain q-values
qvals = qvalue(eb$p.value[,2])$qvalue
qvals[index]
##When reporting such small p-values there is no need to show exactly how small it is
## so we can say < 10^-6
index = which.max(abs( fit$coef[,2]))
qvals[index]
dat2<-dat[start(dat)>start(dat)[index]-5000 & start(dat)<start(dat)[index]+5000)
dat2<-dat[start(dat)>start(dat)[index]-5000 & start(dat)<start(dat)[index]+5000),]
dat[start(dat)>start(dat)[index]-5000]
dat2<-dat[dat[start(dat)>start(dat)[index]-5000] & dat[start(dat)<start(dat)[index]+5000)],]
dat2<-dat[start(dat)>start(dat)[index]-5000 & start(dat)<start(dat)[index]+5000),]
dat2<-dat[start(dat)>start(dat)[index]-5000 ,]
dat2<-dat[start(dat)>start(dat)[index]-5000 & start(dat)<start(dat)[index]+5000,]
library(rafalib)
mypar(1,1)
##extract methylation values
y = getBeta(dat)
shist(y)
dat2<-dat[start(dat)>start(dat)[index]-5000 & start(dat)<start(dat)[index]+5000,]
library(rafalib)
mypar(1,1)
##extract methylation values
y2 = getBeta(dat2)
mds = cmdscale( dist(t(y2)))
tissue = as.factor(pData(dat2)$Tissue)
plot(mds,col=tissue)
plot(y2,col=tissue)
shist(y2,col=tissue)
plot(fit$coef[,2])
nrow(dat2)
str(dat2)
pData(dat2)
y2
dim(y2)
library(rafalib)
mypar(1,1)
##extract methylation values
y2 = getBeta(dat2)
tissue = as.factor(pData(dat2)$Tissue)
plot(y2,col=tissue)
plot(y2[,1:6],col=tissue)
plot(fit$coef[,i],from=1,to=6)
plot(y2[,i],from=1,to=30,col=tissue)
plot(y2[,1],col=tissue)
plot(y2[,1],col=tissue)
for (i in 2:30){
points(y2[,1],col=tissue)
}
plot(y2[,1],col=tissue)
for (i in 2:30){
points(y2[,i],col=tissue)
}
plot(fit$coef[,i],from=1,to=30)
y2
dat2
start(dat2)
plot(start(dat2)[1],y2[,1],col=tissue)
for (i in 2:30){
points(start(dat2)[i],y2[,i],col=tissue)
}
start(dat2)[1]
y2[,1]
plot(rep(start(dat2)[1],48),y2[,1],col=tissue)
for (i in 2:30){
points(rep(start(dat2)[i],48),y2[,i],col=tissue)
}
plot(rep(start(dat2)[1],48),y2[,1],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
for (i in 2:30){
points(rep(start(dat2)[i],48),y2[,i],col=tissue)
}
plot(fit)
mds = cmdscale( dist(t(y)))
tissue = as.factor(pData(dat)$Tissue)
plot(mds,col=tissue)
library(rafalib)
mypar(1,1)
##extract methylation values
y2 = getBeta(dat2)
tissue = as.factor(pData(dat2)$Tissue)
plot(rep(start(dat2)[1],48),y2[,1],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
xlim=c(min(start(dat2)),max(start(dat2)))
for (i in 2:30){
points(rep(start(dat2)[i],48),y2[,i],col=tissue)
}
plot(rep(start(dat2)[1],48),fit$coefs[1,2],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
xlim=c(min(start(dat2)),max(start(dat2)))
for (i in 2:30){
points(rep(start(dat2)[i],48),fit$coefs[i,2],col=tissue)
}
fir$coefs[,2]
fit$coefs[,2]
dat2
start(dat2)
index<-which(dat2 %in% dat)
index<-which(start(dat2) %in% start(dat))
index
index<-which(start(dat) %in% start(dat2))
index
library(qvalue)
##create design matrix
tissue = as.factor(pData(dat)$Tissue)
X = model.matrix(~tissue)
##extract methylation values
y = getBeta(dat)
## obtain effect sizes and pvals with limma
fit = lmFit(y,X)
eb = ebayes(fit)
## obtain q-values
qvals = qvalue(eb$p.value[,2])$qvalue
length(fit$coefficients[2])
fit
coefs<-fit$coefficients[index,2]
index<-which(start(dat) %in% start(dat2))
coefs<-fit$coefficients[index,2]
plot(rep(start(dat2)[1],48),coefs[1],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
xlim=c(min(start(dat2)),max(start(dat2)))
for (i in 2:30){
points(rep(start(dat2)[i],48),coefs[i],col=tissue)
}
coefs
length(coefs)
plot(start(dat2)[1],coefs[1],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
index<-which(start(dat) %in% start(dat2))
coefs<-fit$coefficients[index,2]
plot(start(dat2)[1],coefs[1],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
xlim=c(min(start(dat2)),max(start(dat2)))
for (i in 2:30){
points(start(dat2)[i],coefs[i],col=tissue)
}
length(coefs)
index<-which(start(dat) %in% start(dat2))
coefs<-fit$coefficients[index,2]
plot(start(dat2)[1],coefs[1],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
xlim=c(min(start(dat2)),max(start(dat2)))
for (i in 2:48){
points(start(dat2)[i],coefs[i],col=tissue)
}
index<-which(start(dat) %in% start(dat2))
coefs<-fit$coefficients[index,2]
plot(start(dat2)[index],fit$coefficients[index,2],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
start(dat2)[index]
index<-which(start(dat) %in% start(dat2))
indel()
index
coefs<-fit$coefficients[index,2]
coefs
plot(start(dat2)[index],fit$coefficients[index,2],col=tissue,xlim=c(min(start(dat[index])),max(start(dat[index]))))
start(dat2)[index]
plot(start(dat)[index],fit$coefficients[index,2],col=tissue,xlim=c(min(start(dat[index])),max(start(dat[index]))))
plot(start(dat)[index],-log10(qvals[index]),col=tissue,xlim=c(min(start(dat[index])),max(start(dat[index]))))
library(rafalib)
mypar(3,1)
##extract methylation values
y2 = getBeta(dat2)
tissue = as.factor(pData(dat2)$Tissue)
plot(rep(start(dat2)[1],48),y2[,1],col=tissue,xlim=c(min(start(dat2)),max(start(dat2))))
xlim=c(min(start(dat2)),max(start(dat2)))
for (i in 2:30){
points(rep(start(dat2)[i],48),y2[,i],col=tissue)
}
index<-which(start(dat) %in% start(dat2))
plot(start(dat)[index],fit$coefficients[index,2],col=tissue,xlim=c(min(start(dat[index])),max(start(dat[index]))))
plot(start(dat)[index],-log10(qvals[index]),col=tissue,xlim=c(min(start(dat[index])),max(start(dat[index]))))
# model answer
library(rafalib)
mypar2(3,1)
index = which.max(abs( fit$coef[,2]))
gr=granges(dat)[index]+5000
index=which(granges(dat)%over%gr)
pos= start(dat)[index]
matplot(pos,y[index,],ylab="Methylation",col=as.numeric(tissue))
plot(pos, fit$coef[index,2],ylab="Effect Size")
plot(pos, -log10(qvals[index]) ,ylab="-log10 q-value")
gr
index
index = which.max(abs( fit$coef[,2]))
index
gr=granges(dat)[index]+5000
gr
index=which(granges(dat)%over%gr)
index
pos= start(dat)[index]
pos
gr
gr2<-granges(dat)[index]
gr2
index = which.max(abs( fit$coef[,2]))
gr2==granges(dat)[index]
gr2=granges(dat)[index]
gr2
gr=granges(dat)[index]+5000
gr2
o = order(abs(fit$coef[,2]), decreasing = TRUE)[1:10]
o
index = order(abs(fit$coef[,2]), decreasing = TRUE)[1:10]
library(rafalib)
mypar2(3,1)
pos= start(dat)[index]
matplot(pos,y[index,],ylab="Methylation",col=as.numeric(tissue))
plot(pos, fit$coef[index,2],ylab="Effect Size")
plot(pos, -log10(qvals[index]) ,ylab="-log10 q-value")
index = order(abs(fit$coef[,2]), decreasing = TRUE)[1:10]
library(rafalib)
mypar(3,1)
pos= start(dat)[index]
matplot(pos,y[index,],ylab="Methylation",col=as.numeric(tissue))
plot(pos, fit$coef[index,2],ylab="Effect Size")
plot(pos, -log10(qvals[index]) ,ylab="-log10 q-value")
library(rafalib)
mypar2(3,1)
o = order(abs(fit$coef[,2]), decreasing = TRUE)[1:10]
for(i in o){
index = i
gr=granges(dat)[index]+5000
index=which(granges(dat)%over%gr)
pos= start(dat)[index]
matplot(pos,y[index,,drop=FALSE],ylab="Methylation",col=as.numeric(tissue))
plot(pos, fit$coef[index,2],ylab="Effect Size")
plot(pos, -log10(qvals[index]) ,ylab="-log10 q-value")
}
library(rafalib)
mypar2(3,1)
o = order(abs(fit$coef[,2]), decreasing = TRUE)[1:10]
for(i in o){
index = i
gr=granges(dat)[index]+5000
index=which(granges(dat)%over%gr)
pos= start(dat)[index]
matplot(pos,y[index,,drop=FALSE],ylab="Methylation",col=as.numeric(tissue))
plot(pos, fit$coef[index,2],ylab="Effect Size")
plot(pos, -log10(qvals[index]) ,ylab="-log10 q-value")
}
library(rafalib)
mypar(3,1)
o = order(abs(fit$coef[,2]), decreasing = TRUE)[1:10]
for(i in o){
index = i
gr=granges(dat)[index]+5000
index=which(granges(dat)%over%gr)
pos= start(dat)[index]
matplot(pos,y[index,,drop=FALSE],ylab="Methylation",col=as.numeric(tissue))
plot(pos, fit$coef[index,2],ylab="Effect Size")
plot(pos, -log10(qvals[index]) ,ylab="-log10 q-value")
}
index= which(seqnames(dat)=="chr15")
dat2 = dat[index,]
library(doParallel)
ncores = detectCores()
ncores
registerDoParallel(cores = ncores)
tissue = as.factor(pData(dat)$Tissue)
X = model.matrix(~tissue)
##extract methylation values
set.seed(1)
res = bumphunter(dat2,X,cutoff=0.1,B=100)
head(res$tab)
nrow(res$tab[res$tab$fwer<0.05],)
nrow(res$tab)
nrow(res$tab[res$tab$fwer<0.05,])
sum(res$table$fwer < 0.05)
##fit and qvals were defined in a previous answer
index = which(qvals < 0.05 & abs(fit$coef[,2]) > 0.5 & seqnames(dat)=="chr15")
tab = res$tab[ res$tab$L >= 3,]
tab = makeGRangesFromDataFrame(tab)
findOverlaps(tab,data[index])
findOverlaps(tab,data[index,])
tab = res$tab[ res$tab$L >= 3,]
tab = makeGRangesFromDataFrame(tab)
findOverlaps(tab,data[index,])
findOverlaps(data[index,],tab)
findOverlaps(dat[index,],tab)
findOverlaps(dat[index,],tab)
findOverlaps(tab,dat[index,])
index
tab
index
nrow(findOverlaps(dat[index,],tab))
length(findOverlaps(dat[index,],tab))
length(findOverlaps(dat[index,],tab))/length(index)
mean(granges(dat[index,])%over%tab)
mean(granges(dat[index,])%over%tab)
library(AnnotationHub)
cgi = AnnotationHub()[["AH5086"]]
tab = res$tab[res$tab$fwer <= 0.05,]
tab = makeGRangesFromDataFrame(tab)
map = distanceToNearest(tab,cgi)
d = mcols(map)$distance
mean(d>0 & d<=2000)
path="yourpath"
targets=read.delim(file.path (path,"targets.txt"),as.is=TRUE)
index = which( targets$Status=="normal" & targets$Tissue%in%c("colon","lung") )
targets = targets[index,]
path=path
path=path
targets=read.delim(file.path (path,"targets.txt"),as.is=TRUE)
index = which( targets$Status=="normal" & targets$Tissue%in%c("colon","lung") )
targets = targets[index,]
#path="C:/temp/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
path="H:/RSpace/PH525rawdata/PH525tcgaMethylationSubset-master"
list.files(path)
path=path
targets=read.delim(file.path (path,"targets.txt"),as.is=TRUE)
index = which( targets$Status=="normal" & targets$Tissue%in%c("colon","lung") )
targets = targets[index,]
library(minfi)
dat = read.450k.exp(base=path,targets = targets, verbose=TRUE)
tissue=pData(dat)$Tissue
X = model.matrix(~tissue)
res = bumphunter(dat,X,cutoff=0.25)
nrow(res$tab)
biocLite("bumphunter")
tissue=pData(dat)$Tissue
X = model.matrix(~tissue)
res = bumphunter(dat,X,cutoff=0.25)
res = bumphunter(dat,X,cutoff=0.25)
biocLite("bRGChannelSet")
biocLite("RGChannelSet")
res = bumphunter(dat,X,cutoff=0.25)
